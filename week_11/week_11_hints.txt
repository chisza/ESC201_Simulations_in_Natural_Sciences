


Nx = 200
Ny = 200
dx = 1.0 / Nx
dy = 1.0 / Ny
sigma_x = 10 * dx
sigma_y = 10 * dy
x0 = 2 * sigma_x
y0 = 2 * sigma_y
ca = 0.48
cb = 0.48

def ctu(rho):
	# Use np.roll(rho, 1, axis=1) to calculate the x-axis term in rhoTmp
	# Use np.roll(rho, 1, axis=0) to calculate the y-axis term in rhoNew
    return rhoNew


def cir(rho):
    # Like function ctu(rho) but with CIR formula
    return rhoNew


def initialCondition():
    rho = np.zeros((Nx, Ny))
    for j in range(Nx):
        for l in range(Ny):
            x = j * dx
            y = l * dy
            rho[l, j] = np.exp(-(x - x0)**2 / (2 * sigma_x**2)
                               - (y - y0)**2 / (2 * sigma_y**2))
    return rho

